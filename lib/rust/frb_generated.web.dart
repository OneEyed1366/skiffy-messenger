// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api/auth.dart';
import 'api/secure_storage.dart';
import 'core/storage.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  AuthError dco_decode_auth_error(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  SecureStorageError dco_decode_box_autoadd_secure_storage_error(dynamic raw);

  @protected
  User dco_decode_box_autoadd_user(dynamic raw);

  @protected
  FfiSessionStatus dco_decode_ffi_session_status(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  User? dco_decode_opt_box_autoadd_user(dynamic raw);

  @protected
  SecureStorageApiError dco_decode_secure_storage_api_error(dynamic raw);

  @protected
  SecureStorageError dco_decode_secure_storage_error(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  User dco_decode_user(dynamic raw);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  AuthError sse_decode_auth_error(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  SecureStorageError sse_decode_box_autoadd_secure_storage_error(
    SseDeserializer deserializer,
  );

  @protected
  User sse_decode_box_autoadd_user(SseDeserializer deserializer);

  @protected
  FfiSessionStatus sse_decode_ffi_session_status(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  User? sse_decode_opt_box_autoadd_user(SseDeserializer deserializer);

  @protected
  SecureStorageApiError sse_decode_secure_storage_api_error(
    SseDeserializer deserializer,
  );

  @protected
  SecureStorageError sse_decode_secure_storage_error(
    SseDeserializer deserializer,
  );

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  User sse_decode_user(SseDeserializer deserializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_auth_error(AuthError self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secure_storage_error(
    SecureStorageError self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_user(User self, SseSerializer serializer);

  @protected
  void sse_encode_ffi_session_status(
    FfiSessionStatus self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_user(User? self, SseSerializer serializer);

  @protected
  void sse_encode_secure_storage_api_error(
    SecureStorageApiError self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_secure_storage_error(
    SecureStorageError self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user(User self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {}
